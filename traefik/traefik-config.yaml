apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: traefik

data:
  traefik.yaml: |-
    global:
      checkNewVersion: false    # 周期性的检查是否有新版本发布
      sendAnonymousUsage: false # 周期性的匿名发送使用统计信息
    serversTransport:
      insecureSkipVerify: true  # Traefik忽略验证代理服务的TLS证书
    api:
      insecure: true            # 允许HTTP 方式访问API
      dashboard: true           # 启用Dashboard
      debug: false              # 启用Debug调试模式
    entryPoints:
      web:
        address: ":80"          # 配置80端口，并设置入口名称为web
        forwardedHeaders:
          insecure: true        # 信任所有的forward headers
      websecure:
        address: ":443"         # 配置443端口，并设置入口名称为 websecure
        forwardedHeaders:
          insecure: true
      traefik:
        address: ":9000"        # 配置9000端口，并设置入口名称为 dashboard
      metrics:
        address: ":9100"        # 配置9100端口，作为metrics收集入口
    providers:
      kubernetesCRD:            # 启用Kubernetes CRD方式来配置路由规则
    #    ingressClass: ""        # 指定traefik的ingressClass名称
        ingressClass: "traefik-v2.9" # 指定traefik的ingressClass实例名称
        allowCrossNamespace: true   #允许跨namespace
        allowEmptyServices: true    #允许空endpoints的service        
      kubernetesingress:
        ingressclass: "traefik-v2.9"
      kubernetesGateway: ""
    experimental:
      kubernetesGateway: true
    log:
      level: "DEBUG"            # 设置调试日志级别
      format: "common"          # 设置调试日志格式